## Generating Random Numbers

-   *How do we simulate random numbers from specific probability distributions?*

-   *How do we use random numbers to do stuff?*

The simplest case involves generating uniform pseudo-random numbers. ***Methods for generating random numbers from other probability distributions all depend on the uniform random number generator.***

This set of notes builds upon three black boxes: `runif()`, `sample()`, and `.Random.seed`. It's no use pretending I know how any of this stuff work.

ADD SOME STUFF FROM THE BOOK I LOANED NICO.

### `runif()`

ADD EXPLANATION OF THIS.

```{r}
dunif
punif
qunif
runif
```

### `sample()`

R also has a function that allows *sampling from finite populations.* This `sample()` function can be used with our without replacement.

```{r}
## toss six coins
sample(0:1, size = 6, replace = TRUE)
## permuation of letters A-Z
sample(LETTERS) 
## sample from a multinomial distribution
p <- c(0.2, 0.3, 0.5)
x <- sample(1:3, size = 3000, replace = TRUE, prob = p)
table(x)
table(x) / length(x)
```

### `.Random.seed`

*Note. There's an integer vector called `.Random.seed` in the global environment for every R session. This vector changes every time you generate random numbers or every time you change seeds.*

For example:

```{r}
set.seed(111)
str(.Random.seed)
set.seed(222)
str(.Random.seed)
runif(1) ## generate one random number
str(.Random.seed)
set.seed(111)
str(.Random.seed)
```

### 
